# cryptabet_autogenerate
from microbit import *
import random

sleep(1000)

alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
size = len(alpha)

print("size: ", size)
print("alpha:", alpha)

sleep(1500)

crypta = ""

n = 0
while n < size:
    sleep(50)
    r = random.randint(0, size-1)
    c = alpha[r]
    print("r:", r, ", c:", c)
    if crypta.find(c) == -1:
        crypta = crypta + c
        n = n + 1
        print("n:", n, ", crypta:", crypta)

sleep(1000)    
print("crypta:", crypta)
sleep(100)
print()

# radio_send_images_caesar_key_unknown.py

from microbit import *
import radio
import random                               # <- add

''' Function converts plaintext to ciphertext using key '''

def scramble(key, word):
    alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    result = ""

    for letter in word:
        
        letter = letter.upper()
        index = ( alpha.find(letter) + key ) % 26
        result = result + alpha[index]
    
    return result

''' Script starts from here... '''

radio.on()
radio.config(channel=7)

sleep(1000)

string_list = ["HAPPY", "SAD", "ANGRY"]

key = random.randint(1, 25)                 # <- add

while True:
    
    for packet in string_list:
        print("packet:", packet)
        display.show(getattr(Image, packet))
        
        # packet = caesar(3, packet)        # <- change (before)
        packet = scramble(key, packet)        # <- change (after)
        
        
        print("Send encrypted:", packet)
        radio.send(packet)
        # sleep(2500)                       # <- change (before)
        sleep(6000)                         # <- change (after)
        
        
